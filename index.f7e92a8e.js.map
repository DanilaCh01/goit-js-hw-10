{"mappings":"AAAA,MAEMA,EAAU,CACV,YAHU,yECEhB,MAAMC,EAAcC,SAASC,cAAc,iBACrCC,EAAUF,SAASC,cAAc,aACjCE,EAASH,SAASC,cAAc,WAChCG,EAAQJ,SAASC,cAAc,UAErC,SAASI,EAASC,GAChBJ,EAAQK,MAAMC,QAAUF,EAAU,OAAS,QAC3CF,EAAMG,MAAMC,QAAUF,EAAU,QAAU,M,CAG5C,SAASG,IACPN,EAAOI,MAAMC,QAAU,QACvBN,EAAQK,MAAMC,QAAW,OACzBJ,EAAMG,MAAMC,QAAW,M,CAsBzB,SAASE,IACP,MAAMC,EAAkBZ,EAAYa,MDlB/B,IAAyBC,ECmB1BF,IACFF,IACAP,EAAQY,UAAY,IDrBQD,ECsBZF,EDpBTI,MADG,wDAAsCF,IAC9B,C,QACdf,IAEDkB,MAAKC,IACR,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,kCAAkC,KCcjDJ,MAAK,EAAEK,MACN,MAAMC,EAAYtB,SAASuB,cAAc,OACzCD,EAAUE,UAAUC,IAAI,iBACxBH,EAAUR,UAAY,oEAENO,EAAIK,oBAAoBL,EAAIM,OAAO,GAAGC,qFAG5CP,EAAIM,OAAO,GAAGC,6BACfP,EAAIM,OAAO,GAAGE,gDACDR,EAAIM,OAAO,GAAGG,8CAGpC5B,EAAQY,UAAY,GACpBZ,EAAQ6B,YAAYT,GACpBjB,GAAS,EAAM,IAEhB2B,OAAM,KACL3B,GAAS,EAAK,IACb4B,SAAQ,KACX9B,EAAOI,MAAMC,QAAU,MAAM,I,CA5CjCC,IDXOM,MADK,sCACM,C,QAChBjB,IAECkB,MAAKC,IACJ,GAAIA,EAASC,GACX,OAAOD,EAASE,OAEhB,MAAM,IAAIC,MAAM,yBAAyB,ICM5CJ,MAAKW,IACJ,MAAMO,EAAUP,EAAOQ,KAAIC,GAAS,IAAIC,OAAOD,EAAMR,KAAMQ,EAAME,MACjEvC,EAAYwC,UAAUL,GACtB,IAAIM,WAAW,iBACfnC,GAAS,GACTN,EAAY0C,iBAAiB,SAAU/B,EAAoB,IAE5DsB,OAAM,KACL3B,GAAS,EAAK,IAEf4B,SAAQ,KACP9B,EAAOI,MAAMC,QAAU,MAAM","sources":["src/cat-api.js","src/index.js"],"sourcesContent":["const API_KEY = 'live_5HuACZGpVo6q4GhmGjnW7cARN4fbHFr7RXpF4ARKVERA3a93MeqrNPxf0ymFiD06';\nconst BASE_URL = 'https://api.thecatapi.com/v1/';\nconst headers = {\n      'x-api-key': API_KEY\n    };\n\nexport function fetchBreeds() {\n  const url = `${BASE_URL}breeds`;\n  return fetch(url, {\n    headers,\n  })\n    .then(response => {\n      if (response.ok) {\n        return response.json()\n      } else {\n        throw new Error('Failed to fetch breeds');\n      }\n    })\n};\n\nexport function fetchCatByBreed(breedId) {\n  const url = `${BASE_URL}images/search?breed_ids=${breedId}`;\n    return fetch(url, {\n        headers,\n    })\n      .then(response => {\n    if (response.ok) {\n      return response.json()\n    } else {\n      throw new Error('Failed to fetch cat information');\n    }\n})\n};\n","import { fetchBreeds, fetchCatByBreed } from './cat-api.js';\n\nconst breedSelect = document.querySelector('.breed-select');\nconst catInfo = document.querySelector('.cat-info');\nconst loader = document.querySelector('.loader');\nconst error = document.querySelector('.error');\n\nfunction hasError(boolean) {\n  catInfo.style.display = boolean ? 'none' : 'block';\n  error.style.display = boolean ? 'block' : 'none';\n};\n\nfunction loading() {\n  loader.style.display = 'block';\n  catInfo.style.display =  'none';\n  error.style.display =  'none';\n}\n\nfunction populateBreeds() {\n  loading();\n  fetchBreeds()\n    .then(breeds => {\n      const options = breeds.map(breed => new Option(breed.name, breed.id));\n      breedSelect.append(...options);\n      new SlimSelect('.breed-select');\n      hasError(false);\n      breedSelect.addEventListener('change', fetchCatInformation);\n    })\n    .catch(() => {\n      hasError(true);\n    })\n    .finally(() => {\n      loader.style.display = 'none';\n    });\n}\n\n\nfunction fetchCatInformation() {\n  const selectedBreedId = breedSelect.value;\n  if (selectedBreedId) {\n    loading();\n    catInfo.innerHTML = '';\n    fetchCatByBreed(selectedBreedId)\n      .then(([cat]) => {\n        const container = document.createElement('div');\n        container.classList.add('cat-container');\n        container.innerHTML = `\n          <div class=\"image-container\">\n            <img src=\"${cat.url}\" alt=\"Breed: ${cat.breeds[0].name}\">\n          </div>\n          <div class=\"info-container\">\n            <h2>${cat.breeds[0].name}</h2>\n            <p>${cat.breeds[0].description}</p>\n            <p>Temperament: ${cat.breeds[0].temperament}</p>\n          </div>\n        `;\n        catInfo.innerHTML = '';\n        catInfo.appendChild(container);\n        hasError(false)\n      })\n      .catch(() => {\n        hasError(true)\n      }).finally(() => {\n      loader.style.display = 'none'\n    });\n  }\n}\n\npopulateBreeds();\n\n\n// import { fetchBreeds, fetchCatByBreed } from './cat-api.js';\n\n// const breedSelect = document.querySelector('.breed-select');\n// const catInfo = document.querySelector('.cat-info');\n// const loader = document.querySelector('.loader');\n// const error = document.querySelector('.error');\n\n// function hasError(boolean) {\n//   catInfo.style.display = boolean ? 'none' : 'block';\n//   error.style.display = boolean ? 'block' : 'none';\n// };\n\n// function loading() {\n//   loader.style.display = 'block';\n//   catInfo.style.display =  'none';\n//   error.style.display =  'none';\n// }\n\n// function populateBreeds() {\n//   loading();\n//   fetchBreeds()\n//     .then(breeds => {\n//       // const breedsArray = breeds.map(breed=>{})\n//       breeds.forEach(breed => {\n//         const option = new Option(breed.name, breed.id);\n//         breedSelect.appendChild(option);\n//       });\n//       new SlimSelect('.breed-select');\n//       hasError(false)\n//       breedSelect.addEventListener('change', fetchCatInformation);\n//     })\n//     .catch(() => {\n//       hasError(true)\n//     }).finally(() => {\n//       loader.style.display = 'none'\n//     });\n// }\n\n// function fetchCatInformation() {\n//   const selectedBreedId = breedSelect.value;\n//   if (selectedBreedId) {\n//     loading();\n//     catInfo.innerHTML = '';\n//     fetchCatByBreed(selectedBreedId)\n//       .then(([cat]) => {\n//         const container = document.createElement('div');\n//         container.classList.add('cat-container');\n//         container.innerHTML = `\n//           <div class=\"image-container\">\n//             <img src=\"${cat.url}\" alt=\"Breed: ${cat.breeds[0].name}\">\n//           </div>\n//           <div class=\"info-container\">\n//             <h2>${cat.breeds[0].name}</h2>\n//             <p>${cat.breeds[0].description}</p>\n//             <p>Temperament: ${cat.breeds[0].temperament}</p>\n//           </div>\n//         `;\n//         catInfo.innerHTML = '';\n//         catInfo.appendChild(container);\n//         hasError(false)\n//       })\n//       .catch(() => {\n//         hasError(true)\n//       }).finally(() => {\n//       loader.style.display = 'none'\n//     });\n//   }\n// }\n\n// populateBreeds();"],"names":["$6b5f202d1456c0af$var$headers","$1f0dc3b9307be026$var$breedSelect","document","querySelector","$1f0dc3b9307be026$var$catInfo","$1f0dc3b9307be026$var$loader","$1f0dc3b9307be026$var$error","$1f0dc3b9307be026$var$hasError","boolean","style","display","$1f0dc3b9307be026$var$loading","$1f0dc3b9307be026$var$fetchCatInformation","selectedBreedId","value","breedId","innerHTML","fetch","then","response","ok","json","Error","cat","container","createElement","classList","add","url","breeds","name","description","temperament","appendChild","catch","finally","options","map","breed","Option","id","append","SlimSelect","addEventListener"],"version":3,"file":"index.f7e92a8e.js.map"}